---
- name: Deploy surveillance server playbook
  hosts: all
  vars_prompt:
    - name: public_host
      prompt: Host name?
      private: no
    - name: clean
      prompt: Clean deploy?
      private: no
      default: yes
    - name: root_deployment_directory
      prompt: Enter root deployment_directory
      private: no
      default: kubernetes
    - name: apps
      prompt: Enter apps to deploy
      private: no
      default: common, ispyagentdvr
    - name: env
      prompt: Environment?
      private: no
  tasks:
    - name: Install microk8s
      include_role:
        name: microk8s
      when:
        - clean is defined
        - clean | bool
    - name: Ansible k8s plugin setup
      include_role:
        name: ansible-k8s-plugin
      when:
        - clean is defined
        - clean | bool
    - name: Delete k8s surveillance namespace
      kubernetes.core.k8s:
        name: surveillance
        api_version: v1
        kind: Namespace
        state: absent
        wait: true
      when:
        - clean is defined
        - clean | bool
    - name: Create k8s surveillance namespace
      kubernetes.core.k8s:
        name: surveillance
        api_version: v1
        kind: Namespace
        state: present
        wait: true
    - name: Deploy k8s component
      include_role:
        name: k8s-deployment
      vars:
        deployment_directory: "{{ root_deployment_directory + '/' + item }}"
      loop: "{{ apps.split(',') | map('trim') | list }}"
      loop_control:
        label: "{{ item }}"
    - name: Apply kubernetes patch yaml
      kubernetes.core.k8s_json_patch:
        kind: DaemonSet
        namespace: ingress
        name: nginx-ingress-microk8s-controller
        patch:
          - op: add
            path: "/spec/template/spec/containers/0/ports"
            value:
              - containerPort: 80
                hostPort: 80
                protocol: TCP
              - containerPort: 443
                hostPort: 443
                protocol: TCP
              - name: udp-50000
                containerPort: 50000
                hostPort: 50000
                protocol: UDP
              - name: udp-50001
                containerPort: 50001
                hostPort: 50001
                protocol: UDP
              - name: udp-50002
                containerPort: 50002
                hostPort: 50002
                protocol: UDP
              - name: udp-50003
                containerPort: 50003
                hostPort: 50003
                protocol: UDP
              - name: udp-50004
                containerPort: 50004
                hostPort: 50004
                protocol: UDP
              - name: udp-50005
                containerPort: 50005
                hostPort: 50005
                protocol: UDP
              - name: udp-50006
                containerPort: 50006
                hostPort: 50006
                protocol: UDP
              - name: udp-50007
                containerPort: 50007
                hostPort: 50007
                protocol: UDP
              - name: udp-50008
                containerPort: 50008
                hostPort: 50008
                protocol: UDP
              - name: udp-50009
                containerPort: 50009
                hostPort: 50009
                protocol: UDP
              - name: udp-50010
                containerPort: 50010
                hostPort: 50010
                protocol: UDP
              - name: udp-3478
                containerPort: 3478
                hostPort: 3478
                protocol: UDP
